import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-parent',
  templateUrl: './parent.component.html',
  styleUrls: ['./parent.component.css'],
  changeDetection:ChangeDetectionStrategy.OnPush

})
export class ParentComponent implements OnInit{
  arr=[]

  title=''
ngOnInit(): void {
    setInterval(()=>{
      this.arr=[Math.random()]
    },1000)
}
  parent(){
    console.log('parent');
    return 'Parent'
    
  }

}


---------

<app-child [arr]="arr"></app-child>

{{parent()}}

------

import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';

@Component({
  selector: 'app-child',
  templateUrl: './child.component.html',
  styleUrls: ['./child.component.css'],
  changeDetection:ChangeDetectionStrategy.OnPush
})
export class ChildComponent implements OnInit {
  @Input()
  arr=[]
  title=''
  number=0
constructor(private cf:ChangeDetectorRef){}
ngOnInit(): void {
    setInterval(()=>{
      this.number=Math.random()
      this.cf.markForCheck()
    },1000)
}

  child(){
    console.log('child');
    return 'Child'
    
  }
  


}
-------

<p>child works!</p>

{{child()}}
<br>
{{number}}

<br>
{{arr[0]}}
